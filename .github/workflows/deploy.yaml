# Builds a Docker image and publishes to the Azure Container Registry

name: Deploy

on:
  push:
    branches: [main]
    paths:
      - 'Cargo.lock'
      - 'src/**'
      - 'crates/**'
  pull_request:
    branches: [main]
    paths:
      - 'Cargo.lock'
      - 'src/**'
      - 'crates/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Increment version
        uses: reecetech/version-increment@2024.4.3
        id: version
        with:
          scheme: semver
          increment: patch

      - uses: docker/setup-qemu-action@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: acrcredibil.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            acrcredibil.azurecr.io/demo/${{ github.event.repository.name }}:${{ steps.version.outputs.version }}
            acrcredibil.azurecr.io/demo/${{ github.event.repository.name }}:latest

      - name: Create release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.version.outputs.version }}',
              prerelease: false
            })